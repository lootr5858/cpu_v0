$date
	Sat May 14 14:57:26 2022
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module tb_cpu $end
$var wire 256 ! testreg_inst [255:0] $end
$var wire 256 " testreg_data [255:0] $end
$var wire 1 # ram_we $end
$var wire 16 $ ram_d [15:0] $end
$var wire 16 % io_dout [15:0] $end
$var wire 8 & addr_ram [7:0] $end
$var reg 1 ' clock $end
$var reg 1 ( interrupt $end
$var reg 16 ) io_din [15:0] $end
$var reg 16 * io_inst [15:0] $end
$var reg 16 + ram_q [15:0] $end
$var reg 1 , reset $end
$var integer 32 - j [31:0] $end
$var integer 32 . k [31:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk2[0] $end
$upscope $end
$scope begin genblk2[1] $end
$upscope $end
$scope begin genblk2[2] $end
$upscope $end
$scope begin genblk2[3] $end
$upscope $end
$scope begin genblk2[4] $end
$upscope $end
$scope begin genblk2[5] $end
$upscope $end
$scope begin genblk2[6] $end
$upscope $end
$scope begin genblk2[7] $end
$upscope $end
$scope begin genblk2[8] $end
$upscope $end
$scope begin genblk2[9] $end
$upscope $end
$scope begin genblk2[10] $end
$upscope $end
$scope begin genblk2[11] $end
$upscope $end
$scope begin genblk2[12] $end
$upscope $end
$scope begin genblk2[13] $end
$upscope $end
$scope begin genblk2[14] $end
$upscope $end
$scope begin genblk2[15] $end
$upscope $end
$scope module cpu $end
$var wire 1 ' clock $end
$var wire 1 ( interrupt $end
$var wire 16 / io_din [15:0] $end
$var wire 16 0 io_inst [15:0] $end
$var wire 1 1 mux_io_rs0_ram $end
$var wire 16 2 ram_q [15:0] $end
$var wire 1 , reset $end
$var wire 256 3 testreg_inst [255:0] $end
$var wire 256 4 testreg_data [255:0] $end
$var wire 4 5 sel_inst [3:0] $end
$var wire 16 6 rs1 [15:0] $end
$var wire 16 7 rs0 [15:0] $end
$var wire 1 8 rd_we $end
$var wire 16 9 rd [15:0] $end
$var wire 1 # ram_we $end
$var wire 16 : ram_d [15:0] $end
$var wire 4 ; pc_offset [3:0] $end
$var wire 6 < pc_cnt [5:0] $end
$var wire 2 = mux_rd_ram_alu_io [1:0] $end
$var wire 1 > mux_ram_rs0_io $end
$var wire 16 ? instructions [15:0] $end
$var wire 1 @ ins_we $end
$var wire 1 A en_offset $end
$var wire 1 B en_mv $end
$var wire 1 C en_cnt $end
$var wire 16 D dinst [15:0] $end
$var wire 4 E alu_op [3:0] $end
$var wire 16 F alu_dout [15:0] $end
$var wire 4 G addr_rs1 [3:0] $end
$var wire 4 H addr_rs0 [3:0] $end
$var wire 4 I addr_rd [3:0] $end
$var wire 8 J addr_ram [7:0] $end
$var wire 4 K addr_iwe [3:0] $end
$var wire 4 L addr_ins [3:0] $end
$var reg 16 M io_dout [15:0] $end
$scope module alu $end
$var wire 1 ' clock $end
$var wire 1 , reset $end
$var wire 16 N dout [15:0] $end
$var wire 16 O din1 [15:0] $end
$var wire 16 P din0 [15:0] $end
$var wire 4 Q alu_op [3:0] $end
$var reg 16 R temp [15:0] $end
$upscope $end
$scope module controller $end
$var wire 1 ' clock $end
$var wire 16 S instructions [15:0] $end
$var wire 1 ( interrupt $end
$var wire 1 , reset $end
$var wire 4 T op_code [3:0] $end
$var reg 8 U addr_RAM [7:0] $end
$var reg 4 V addr_ins [3:0] $end
$var reg 4 W addr_rd [3:0] $end
$var reg 4 X addr_rs0 [3:0] $end
$var reg 4 Y addr_rs1 [3:0] $end
$var reg 4 Z alu_op [3:0] $end
$var reg 1 C en_cnt $end
$var reg 1 B en_mv $end
$var reg 1 A en_offset $end
$var reg 1 @ ins_we $end
$var reg 1 [ mux_io_rs0_ram $end
$var reg 1 > mux_ram_rs0_io $end
$var reg 2 \ mux_rd_ram_alu_io [1:0] $end
$var reg 4 ] pc_offset [3:0] $end
$var reg 1 # ram_we $end
$var reg 1 8 rd_we $end
$upscope $end
$scope module pc $end
$var wire 1 ' clock $end
$var wire 1 C en_cnt $end
$var wire 1 A en_offset $end
$var wire 4 ^ pc_offset [3:0] $end
$var wire 1 , reset $end
$var reg 6 _ pc_cnt [5:0] $end
$upscope $end
$scope module regfile_data $end
$var wire 4 ` addr_rd [3:0] $end
$var wire 4 a addr_rs0 [3:0] $end
$var wire 4 b addr_rs1 [3:0] $end
$var wire 1 ' clock $end
$var wire 16 c rd [15:0] $end
$var wire 1 , reset $end
$var wire 1 8 we $end
$var wire 256 d testreg [255:0] $end
$var reg 16 e rs0 [15:0] $end
$var reg 16 f rs1 [15:0] $end
$var integer 32 g ri [31:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$upscope $end
$scope module regfile_instructions $end
$var wire 4 h addr [3:0] $end
$var wire 1 ' clock $end
$var wire 16 i din [15:0] $end
$var wire 1 , reset $end
$var wire 1 @ we $end
$var wire 256 j testreg [255:0] $end
$var reg 16 k dout [15:0] $end
$var integer 32 l ri [31:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 m \test_inst[0] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 n \test_inst[1] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 o \test_inst[2] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 p \test_inst[3] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 q \test_inst[4] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 r \test_inst[5] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 s \test_inst[6] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 t \test_inst[7] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 u \test_inst[8] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 v \test_inst[9] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 w \test_inst[10] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 x \test_inst[11] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 y \test_inst[12] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 z \test_inst[13] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 { \test_inst[14] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 | \test_inst[15] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 } \test_data[0] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 ~ \test_data[1] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 !" \test_data[2] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 "" \test_data[3] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 #" \test_data[4] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 $" \test_data[5] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 %" \test_data[6] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 &" \test_data[7] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 '" \test_data[8] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 (" \test_data[9] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 )" \test_data[10] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 *" \test_data[11] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 +" \test_data[12] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 ," \test_data[13] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 -" \test_data[14] [15:0] $end
$upscope $end
$scope module tb_cpu $end
$var reg 16 ." \test_data[15] [15:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b10000 l
b0 k
b0 j
b0 i
b0 h
b10000 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
0[
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
0C
0B
0A
0@
b0 ?
0>
b0 =
b0 <
b0 ;
b0 :
b0 9
08
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
z1
b0 0
b0 /
b10000 .
b10000 -
1,
b0 +
b0 *
b0 )
0(
0'
b0 &
b0 %
b0 $
0#
b0 "
b0 !
$end
#500
b10000 g
b10000 l
1'
#1000
0'
0,
#1100
b10 T
b10000000000000 ?
b10000000000000 S
b10000000000000 *
b10000000000000 0
1(
#1500
1@
b10 =
b10 \
1>
1'
#2000
0'
#2100
b1000000001010 9
b1000000001010 c
b1000000001010 $
b1000000001010 :
b1000000001010 )
b1000000001010 /
b1000000001010 i
#2500
b1000000001010 m
b1000000001010 !
b1000000001010 3
b1000000001010 j
1'
#3000
0'
#3100
b10000100000000 ?
b10000100000000 S
b10000100000000 *
b10000100000000 0
#3500
b1 L
b1 h
b1 K
b1 V
1'
#4000
0'
#4100
b1000100001011 9
b1000100001011 c
b1000100001011 $
b1000100001011 :
b1000100001011 )
b1000100001011 /
b1000100001011 i
#4500
b1000100001011 n
b10001000010110001000000001010 !
b10001000010110001000000001010 3
b10001000010110001000000001010 j
1'
#5000
0'
#5100
b10001000000000 ?
b10001000000000 S
b10001000000000 *
b10001000000000 0
#5500
b10 L
b10 h
b10 K
b10 V
1'
#6000
0'
#6100
b100001000000000 9
b100001000000000 c
b100001000000000 $
b100001000000000 :
b100001000000000 )
b100001000000000 /
b100001000000000 i
#6500
b100001000000000 o
b10000100000000000010001000010110001000000001010 !
b10000100000000000010001000010110001000000001010 3
b10000100000000000010001000010110001000000001010 j
1'
#7000
0'
#7100
b10001100000000 ?
b10001100000000 S
b10001100000000 *
b10001100000000 0
#7500
b11 L
b11 h
b11 K
b11 V
1'
#8000
0'
#8100
b1001001100100001 9
b1001001100100001 c
b1001001100100001 $
b1001001100100001 :
b1001001100100001 )
b1001001100100001 /
b1001001100100001 i
#8500
b1001001100100001 p
b1001001100100001010000100000000000010001000010110001000000001010 !
b1001001100100001010000100000000000010001000010110001000000001010 3
b1001001100100001010000100000000000010001000010110001000000001010 j
1'
#9000
0'
#9100
b10010000000000 ?
b10010000000000 S
b10010000000000 *
b10010000000000 0
#9500
b100 L
b100 h
b100 K
b100 V
1'
#10000
0'
#10100
b1010010000100011 9
b1010010000100011 c
b1010010000100011 $
b1010010000100011 :
b1010010000100011 )
b1010010000100011 /
b1010010000100011 i
#10500
b1010010000100011 q
b10100100001000111001001100100001010000100000000000010001000010110001000000001010 !
b10100100001000111001001100100001010000100000000000010001000010110001000000001010 3
b10100100001000111001001100100001010000100000000000010001000010110001000000001010 j
1'
#11000
0'
#11100
b10010100000000 ?
b10010100000000 S
b10010100000000 *
b10010100000000 0
#11500
b101 L
b101 h
b101 K
b101 V
1'
#12000
0'
#12100
b1101010101000010 9
b1101010101000010 c
b1101010101000010 $
b1101010101000010 :
b1101010101000010 )
b1101010101000010 /
b1101010101000010 i
#12500
b1101010101000010 r
b110101010100001010100100001000111001001100100001010000100000000000010001000010110001000000001010 !
b110101010100001010100100001000111001001100100001010000100000000000010001000010110001000000001010 3
b110101010100001010100100001000111001001100100001010000100000000000010001000010110001000000001010 j
1'
#13000
0'
#13100
b10011000000000 ?
b10011000000000 S
b10011000000000 *
b10011000000000 0
#13500
b110 L
b110 h
b110 K
b110 V
1'
#14000
0'
#14100
b100000101000000 9
b100000101000000 c
b100000101000000 $
b100000101000000 :
b100000101000000 )
b100000101000000 /
b100000101000000 i
#14500
b100000101000000 s
b100000101000000110101010100001010100100001000111001001100100001010000100000000000010001000010110001000000001010 !
b100000101000000110101010100001010100100001000111001001100100001010000100000000000010001000010110001000000001010 3
b100000101000000110101010100001010100100001000111001001100100001010000100000000000010001000010110001000000001010 j
1'
#15000
0'
#15100
b10011100000000 ?
b10011100000000 S
b10011100000000 *
b10011100000000 0
#15500
b111 L
b111 h
b111 K
b111 V
1'
#16000
0'
#16100
b1100101100000000 9
b1100101100000000 c
b1100101100000000 $
b1100101100000000 :
b1100101100000000 )
b1100101100000000 /
b1100101100000000 i
#16500
b1100101100000000 t
b11001011000000000100000101000000110101010100001010100100001000111001001100100001010000100000000000010001000010110001000000001010 !
b11001011000000000100000101000000110101010100001010100100001000111001001100100001010000100000000000010001000010110001000000001010 3
b11001011000000000100000101000000110101010100001010100100001000111001001100100001010000100000000000010001000010110001000000001010 j
1'
#17000
0'
#17100
b1111 T
b1111111111111111 ?
b1111111111111111 S
b1111111111111111 *
b1111111111111111 0
#17500
b0 L
b0 h
0@
b0 K
b0 V
1'
#18000
0'
#18100
b0 9
b0 c
b0 T
b0 $
b0 :
b0 ?
b0 S
b0 )
b0 /
b0 i
b0 *
b0 0
0(
#18500
b1 T
b1000000001010 ?
b1000000001010 S
b0 =
b0 \
0>
b1000000001010 D
b1000000001010 k
1'
#19000
0'
#19100
b10 9
b10 c
b10 +
b10 2
#19500
18
1C
b1010 &
b1010 J
b1010 U
b1 E
b1 Q
b1 Z
1'
#20000
0'
#20500
b10 }
b1 <
b1 _
b10 "
b10 4
b10 d
1'
#21000
0'
#21500
b10 $
b10 :
b10 6
b10 O
b10 f
b10 7
b10 P
b10 e
b10 <
b10 _
1'
#22000
0'
#22500
b10 %
b10 M
b11 <
b11 _
1'
#23000
0'
#23500
b1 L
b1 h
b1 5
b100 <
b100 _
1'
#24000
0'
#24500
b1000100001011 ?
b1000100001011 S
b101 <
b101 _
b1000100001011 D
b1000100001011 k
1'
#25000
0'
#25500
b110 <
b110 _
b1 I
b1 W
b1 `
b1011 &
b1011 J
b1011 U
1'
#26000
0'
#26500
b10 ~
b111 <
b111 _
b100000000000000010 "
b100000000000000010 4
b100000000000000010 d
1'
#27000
0'
#27100
b101 9
b101 c
b101 +
b101 2
#27500
b10 L
b10 h
b10 5
b101 ~
b1010000000000000010 "
b1010000000000000010 4
b1010000000000000010 d
b1000 <
b1000 _
1'
#28000
0'
#28500
b100 T
b100001000000000 ?
b100001000000000 S
b1001 <
b1001 _
b100001000000000 D
b100001000000000 k
1'
#29000
0'
#29500
b0 9
b0 c
b1010 <
b1010 _
b1 =
b1 \
b10 I
b10 W
b10 `
b0 &
b0 J
b0 U
b100 E
b100 Q
b100 Z
1'
#30000
0'
#30500
b1111111111111101 9
b1111111111111101 c
b1111111111111101 F
b1111111111111101 N
b1111111111111101 R
b1011 <
b1011 _
1'
#31000
0'
#31100
b0 +
b0 2
#31500
b11 L
b11 h
b11 5
b1111111111111101 !"
b111111111111110100000000000001010000000000000010 "
b111111111111110100000000000001010000000000000010 4
b111111111111110100000000000001010000000000000010 d
b1100 <
b1100 _
1'
#32000
0'
#32500
b1001 T
b1001001100100001 ?
b1001001100100001 S
b1101 <
b1101 _
b1001001100100001 D
b1001001100100001 k
1'
#33000
0'
#33500
b1110 <
b1110 _
b11 I
b11 W
b11 `
b1 G
b1 Y
b1 b
b10 H
b10 X
b10 a
b1001 E
b1001 Q
b1001 Z
1'
#34000
0'
#34500
b1111111111111010 9
b1111111111111010 c
b1111111111111101 $
b1111111111111101 :
b1111111111111101 ""
b1111111111111010 F
b1111111111111010 N
b1111111111111010 R
b1111 <
b1111 _
b1111111111111101 6
b1111111111111101 O
b1111111111111101 f
b1111111111111101 7
b1111111111111101 P
b1111111111111101 e
b1111111111111101111111111111110100000000000001010000000000000010 "
b1111111111111101111111111111110100000000000001010000000000000010 4
b1111111111111101111111111111110100000000000001010000000000000010 d
1'
#35000
0'
#35500
b100 L
b100 h
b100 5
b1111111111111010 ""
b1111111111111010111111111111110100000000000001010000000000000010 "
b1111111111111010111111111111110100000000000001010000000000000010 4
b1111111111111010111111111111110100000000000001010000000000000010 d
b10000 <
b10000 _
b1111111111111101 %
b1111111111111101 M
1'
#36000
0'
#36500
b1010 T
b1010010000100011 ?
b1010010000100011 S
b10001 <
b10001 _
b1010010000100011 D
b1010010000100011 k
1'
#37000
0'
#37500
b10010 <
b10010 _
b100 I
b100 W
b100 `
b11 G
b11 Y
b11 b
b1010 E
b1010 Q
b1010 Z
1'
#38000
0'
#38500
b0 9
b0 c
b1111111111111010 #"
b0 F
b0 N
b0 R
b10011 <
b10011 _
b11111111111110101111111111111010111111111111110100000000000001010000000000000010 "
b11111111111110101111111111111010111111111111110100000000000001010000000000000010 4
b11111111111110101111111111111010111111111111110100000000000001010000000000000010 d
1'
#39000
0'
#39500
b101 L
b101 h
b101 5
b0 #"
b1111111111111010111111111111110100000000000001010000000000000010 "
b1111111111111010111111111111110100000000000001010000000000000010 4
b1111111111111010111111111111110100000000000001010000000000000010 d
b10100 <
b10100 _
1'
#40000
0'
#40500
b1101 T
b1101010101000010 ?
b1101010101000010 S
b10101 <
b10101 _
b1101010101000010 D
b1101010101000010 k
1'
#41000
0'
#41500
b10110 <
b10110 _
b101 I
b101 W
b101 `
b10 G
b10 Y
b10 b
b100 H
b100 X
b100 a
b1101 E
b1101 Q
b1101 Z
1'
#42000
0'
#42500
b0 $
b0 :
b10111 <
b10111 _
b0 6
b0 O
b0 f
b0 7
b0 P
b0 e
1'
#43000
0'
#43500
b110 L
b110 h
b110 5
b11000 <
b11000 _
b0 %
b0 M
1'
#44000
0'
#44500
b100 T
b100000101000000 ?
b100000101000000 S
b11001 <
b11001 _
b100000101000000 D
b100000101000000 k
1'
#45000
0'
#45500
b11010 <
b11010 _
b1 I
b1 W
b1 `
b0 G
b0 Y
b0 b
b100 E
b100 Q
b100 Z
1'
#46000
0'
#46500
b1111111111111111 9
b1111111111111111 c
b0 ~
b1111111111111111 F
b1111111111111111 N
b1111111111111111 R
b11011 <
b11011 _
b1111111111111010111111111111110100000000000000000000000000000010 "
b1111111111111010111111111111110100000000000000000000000000000010 4
b1111111111111010111111111111110100000000000000000000000000000010 d
1'
#47000
0'
#47500
b111 L
b111 h
b111 5
b1111111111111111 ~
b1111111111111010111111111111110111111111111111110000000000000010 "
b1111111111111010111111111111110111111111111111110000000000000010 4
b1111111111111010111111111111110111111111111111110000000000000010 d
b11100 <
b11100 _
1'
#48000
0'
#48500
b1100 T
b1100101100000000 ?
b1100101100000000 S
b11101 <
b11101 _
b1100101100000000 D
b1100101100000000 k
1'
#49000
0'
#49500
b11110 <
b11110 _
b1011 I
b1011 W
b1011 `
b0 H
b0 X
b0 a
b1100 E
b1100 Q
b1100 Z
1'
#50000
0'
#50500
b0 9
b0 c
b10 $
b10 :
b1111111111111111 *"
b0 F
b0 N
b0 R
b11111 <
b11111 _
b10 6
b10 O
b10 f
b10 7
b10 P
b10 e
b111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111010111111111111110111111111111111110000000000000010 "
b111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111010111111111111110111111111111111110000000000000010 4
b111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111010111111111111110111111111111111110000000000000010 d
1'
#51000
0'
#51500
b1000 L
b1000 h
b1000 5
b100 9
b100 c
b0 *"
b1111111111111010111111111111110111111111111111110000000000000010 "
b1111111111111010111111111111110111111111111111110000000000000010 4
b1111111111111010111111111111110111111111111111110000000000000010 d
b100000 <
b100000 _
b100 F
b100 N
b100 R
b10 %
b10 M
1'
#52000
0'
#52500
b0 T
b100 *"
b0 ?
b0 S
b100001 <
b100001 _
b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111010111111111111110111111111111111110000000000000010 "
b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111010111111111111110111111111111111110000000000000010 4
b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111010111111111111110111111111111111110000000000000010 d
b0 D
b0 k
1'
#53000
0'
#53500
b0 9
b0 c
b100010 <
b100010 _
b0 =
b0 \
08
0C
b0 I
b0 W
b0 `
b0 E
b0 Q
b0 Z
1'
#54000
0'
#54500
1'
#55000
0'
#55500
1'
#56000
0'
#56500
1'
#57000
0'
#57500
1'
#58000
0'
#58500
1'
#59000
0'
#59500
1'
#60000
0'
#60500
1'
#61000
0'
#61100
